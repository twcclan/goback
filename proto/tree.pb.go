// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tree.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tree struct {
	Nodes                []*TreeNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Tree) Reset()         { *m = Tree{} }
func (m *Tree) String() string { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()    {}
func (*Tree) Descriptor() ([]byte, []int) {
	return fileDescriptor_tree_325d3c1490d62e74, []int{0}
}
func (m *Tree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree.Unmarshal(m, b)
}
func (m *Tree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree.Marshal(b, m, deterministic)
}
func (dst *Tree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree.Merge(dst, src)
}
func (m *Tree) XXX_Size() int {
	return xxx_messageInfo_Tree.Size(m)
}
func (m *Tree) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree.DiscardUnknown(m)
}

var xxx_messageInfo_Tree proto.InternalMessageInfo

func (m *Tree) GetNodes() []*TreeNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type TreeNode struct {
	// contains info about whether this is a file or a directory (tree)
	Stat                 *FileInfo `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Ref                  *Ref      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TreeNode) Reset()         { *m = TreeNode{} }
func (m *TreeNode) String() string { return proto.CompactTextString(m) }
func (*TreeNode) ProtoMessage()    {}
func (*TreeNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_tree_325d3c1490d62e74, []int{1}
}
func (m *TreeNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeNode.Unmarshal(m, b)
}
func (m *TreeNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeNode.Marshal(b, m, deterministic)
}
func (dst *TreeNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeNode.Merge(dst, src)
}
func (m *TreeNode) XXX_Size() int {
	return xxx_messageInfo_TreeNode.Size(m)
}
func (m *TreeNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeNode.DiscardUnknown(m)
}

var xxx_messageInfo_TreeNode proto.InternalMessageInfo

func (m *TreeNode) GetStat() *FileInfo {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *TreeNode) GetRef() *Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func init() {
	proto.RegisterType((*Tree)(nil), "proto.Tree")
	proto.RegisterType((*TreeNode)(nil), "proto.TreeNode")
}

func init() { proto.RegisterFile("tree.proto", fileDescriptor_tree_325d3c1490d62e74) }

var fileDescriptor_tree_325d3c1490d62e74 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x29, 0x4a, 0x4d,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x5c, 0x69, 0x99, 0x39, 0x50,
	0x21, 0x29, 0xce, 0xa2, 0xd4, 0x34, 0x08, 0x53, 0x49, 0x97, 0x8b, 0x25, 0xa4, 0x28, 0x35, 0x55,
	0x48, 0x95, 0x8b, 0x35, 0x2f, 0x3f, 0x25, 0xb5, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x88,
	0x1f, 0x22, 0xad, 0x07, 0x92, 0xf3, 0xcb, 0x4f, 0x49, 0x0d, 0x82, 0xc8, 0x2a, 0xf9, 0x72, 0x71,
	0xc0, 0x84, 0x84, 0x94, 0xb9, 0x58, 0x8a, 0x4b, 0x12, 0x4b, 0x24, 0x18, 0x15, 0x18, 0x91, 0x74,
	0xb8, 0x65, 0xe6, 0xa4, 0x7a, 0xe6, 0xa5, 0xe5, 0x07, 0x81, 0x25, 0x85, 0x64, 0xb8, 0x98, 0x8b,
	0x52, 0xd3, 0x24, 0x98, 0xc0, 0x6a, 0xb8, 0xa0, 0x6a, 0x82, 0x52, 0xd3, 0x82, 0x40, 0xc2, 0x49,
	0x6c, 0x60, 0xbe, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x01, 0x15, 0x90, 0x21, 0xb0, 0x00, 0x00,
	0x00,
}
