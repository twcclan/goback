// Code generated by protoc-gen-go.
// source: index.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Location struct {
	Ref    *Ref       `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	Offset uint64     `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Type   ObjectType `protobuf:"varint,3,opt,name=type,enum=proto.ObjectType" json:"type,omitempty"`
	// total size of object including header
	Size uint64 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto1.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Location) GetRef() *Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

type Index struct {
	Locations []*Location `protobuf:"bytes,1,rep,name=locations" json:"locations,omitempty"`
}

func (m *Index) Reset()                    { *m = Index{} }
func (m *Index) String() string            { return proto1.CompactTextString(m) }
func (*Index) ProtoMessage()               {}
func (*Index) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *Index) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func init() {
	proto1.RegisterType((*Location)(nil), "proto.Location")
	proto1.RegisterType((*Index)(nil), "proto.Index")
}

var fileDescriptor4 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcc, 0x4b, 0x49,
	0xad, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x9c, 0x45, 0xa9, 0x69,
	0x10, 0x11, 0x29, 0x9e, 0xfc, 0xa4, 0xac, 0xd4, 0xe4, 0x12, 0x08, 0x4f, 0xa9, 0x9a, 0x8b, 0xc3,
	0x27, 0x3f, 0x39, 0xb1, 0x24, 0x33, 0x3f, 0x4f, 0x48, 0x86, 0x8b, 0x19, 0xa8, 0x4c, 0x82, 0x51,
	0x81, 0x51, 0x83, 0xdb, 0x88, 0x0b, 0xa2, 0x40, 0x2f, 0x28, 0x35, 0x2d, 0x08, 0x24, 0x2c, 0x24,
	0xc6, 0xc5, 0x96, 0x9f, 0x96, 0x56, 0x9c, 0x5a, 0x22, 0xc1, 0x04, 0x54, 0xc0, 0x12, 0x04, 0xe5,
	0x09, 0xa9, 0x72, 0xb1, 0x94, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x03, 0x45, 0xf9, 0x8c, 0x04, 0xa1,
	0xda, 0xfc, 0xc1, 0x96, 0x84, 0x00, 0x25, 0x82, 0xc0, 0xd2, 0x42, 0x42, 0x5c, 0x2c, 0xc5, 0x99,
	0x55, 0xa9, 0x12, 0x2c, 0x60, 0xcd, 0x60, 0xb6, 0x92, 0x19, 0x17, 0xab, 0x27, 0xc8, 0xad, 0x42,
	0xba, 0x5c, 0x9c, 0x39, 0x50, 0x57, 0x14, 0x03, 0xed, 0x67, 0x06, 0xda, 0xcf, 0x0f, 0x35, 0x08,
	0xe6, 0xba, 0x20, 0x84, 0x8a, 0x24, 0x36, 0xb0, 0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x96,
	0xa0, 0xce, 0x87, 0xea, 0x00, 0x00, 0x00,
}
